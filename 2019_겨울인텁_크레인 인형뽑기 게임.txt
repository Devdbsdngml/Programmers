import java.util.*;

class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        
        Stack<Integer> st = new Stack<Integer>();
        
        for(int i=0; i<moves.length; i++){
            for(int j=0; j<board.length; j++){
                // 인형이 존재하는 경우
                if(board[j][moves[i]-1] != 0){
                    // 스택이 비어 있으면
                    if(st.isEmpty()){
                        st.push(board[j][moves[i]-1]);
                    }
                    // 스택이 비어 있지 않으면
                    else{
                        // 인형 동일한 경우 -> pop하고 카운트 +2
                        if(st.peek() == board[j][moves[i]-1]){
                            st.pop();
                            answer+=2;
                        }
                        // 인형이 동일하지 않을 경우 -> push
                        else{
                            st.push(board[j][moves[i]-1]);
                        }
                    }
                    // 인형 뺀 자리 0으로 만들어주기
                    board[j][moves[i]-1] = 0;
                    break;
                }
            }
        }
        return answer;
    }
}