class Solution {
    int answer;
    boolean[] isUsed;
    public int solution(String begin, String target, String[] words) {
        answer = 50;
        isUsed = new boolean[words.length];
        
        findAnswer(begin, target, words, 0);
        
        return answer == 50 ? 0 : answer;
    }
    
    void findAnswer(String begin, String target, String[] words, int cnt){
        // base condition
        if(begin.equals(target)){
            answer = Math.min(answer, cnt);
            return;
        }
        
        for(int i=0; i<words.length; i++){
            if(!isUsed[i] && checkChange(begin, words[i])){
                isUsed[i] = true;
                findAnswer(words[i], target, words, cnt+1);
                isUsed[i] = false;
            }
        }
    }
    
    // 1. 한 번에 한 개의 알파벳만 바꿀 수 있습니다.
    boolean checkChange(String begin, String str){
        int cnt = 0;
        for(int i=0; i<str.length(); i++){
            // ex) hit  hot
            if(begin.charAt(i) != str.charAt(i)){
                cnt++;
            }
        }
        
        return cnt == 1 ? true : false;
    }
}