import java.util.*;

class Solution {
    class Fail{
        int stage;
        double rate;
        
        Fail(int stage, double rate){
            this.stage = stage;
            this.rate = rate;
        }
    }
    
    public int[] solution(int N, int[] stages) {
        int[] answer = new int[N];
        List<Fail> list = new ArrayList<>();
        int[] curUsers = new int[N+1];
        int total = stages.length;
        
        for(int i : stages){
            curUsers[i-1]++;
        }
        
        for(int i=0; i<N; i++){
            if(curUsers[i] == 0){
                list.add(new Fail(i+1, 0));
            } else{
                list.add(new Fail(i+1, (double)curUsers[i]/total));
                total -= curUsers[i];
            }
        }
        
        Collections.sort(list, new Comparator<Fail>(){
            @Override
            public int compare(Fail a, Fail b){
                if(a.rate == b.rate){
                    return a.stage - b.stage;
                }
                
                return Double.compare(b.rate, a.rate);
            }
        });
        
        for(int i=0; i<list.size(); i++){
            answer[i] = list.get(i).stage;
        }
        
        return answer;
    }
}